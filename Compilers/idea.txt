01. UML图文本分析程序: 将文本转化成UML图(类图、顺序图)
对于分析源码，特别是面向对象的源码来说，类图和顺序列是不可或缺的。但大多软件画起来很麻烦，而且是基于图形的。
Flex/Bison -> 中间代码 -> HTML5_canvas/SVG/Python

准备:
前端: 了解语言规范: C++/JAVA
	=> 类图: 直接分析源码，构建中间代码
	=> 序列图: 
后端: 了解类图和顺序图的规范, 了解SVG的规范
	=> 类图: 根据
中间代码:
	=> 类图:
		=> 类的成员变量和成员函数
			=> 成员变量: public/protected/private, 变量类型, 变量名
				=> 用符号-->表示
			=> 成员函数: public/protected/private, 返回值类型, 函数名, 参数列表
				=> 用符号==>表示
		=> 类之间的关系
			=> 继承、实现(用符号/|\表示)
			=> 关联、聚合、合成(用符号-|>表示)
			=> 依赖(用符号表示)
	=> 序列图:
		=> 对象

拓扑:
算法-使类图之间的交叉尽可能少

序列图
	=> 参与者，用一个lifeline来表示，Active的地方为Bar形式，其他为虚线
	=> 方法调用，返回值
	
参与者  |  方法调用  |  返回值
在生命周期内调用则用嵌套
参与者  |  方法调用  |  返回值
{
  参与者  |  方法调用  |  返回值
  {
    参与者  |  方法调用  |  返回值
  }
  参与者  |  方法调用  |  返回值
}
